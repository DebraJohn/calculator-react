{"version":3,"sources":["components/event/index.js","components/screen/index.js","components/block/index.js","components/keyboard/index.js","components/calc/index.js","App.js","serviceWorker.js","index.js"],"names":["components_event","EventEmitter","Screen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","num1","react_default","a","createElement","className","_this2","eventEmitter","Emitter","addListener","val","handleRecieved","removeListener","_this$state","setState","newVal","String","substr","length","fn","handleNum1","t","valFlag","isNaN","Number","handleResult","secVal","_this$state2","React","Component","Block","_this$props","shape","active","concat","onClick","handleValue","handleTouch","emit","Keyboard","block_Block","Calc","screen_Screen","keyboard_Keyboard","App","calc_Calc","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.136f3948.chunk.js","sourcesContent":["import { EventEmitter } from \"events\";\nexport default new EventEmitter();","import React from 'react';\nimport Emitter from '../event';\n\nimport './index.css';\n\nexport default class Screen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', num1: 0 };\n  }\n  render() {\n    const { value } = this.state;\n    return (\n      <div className=\"screen\">\n        <span className=\"output\">{value}</span>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.eventEmitter = Emitter.addListener('sendValue', val => {\n      this.handleRecieved(val);\n    });\n  }\n  componentWillUnmount() {\n    Emitter.removeListener(this.eventEmitter);\n  }\n\n  handleRecieved(val) {\n    const { value, num1 } = this.state;\n    switch (val) {\n      case 'C':\n        this.setState({\n          value: '',\n          num1: 0\n        });\n        break;\n      case 'DEL':\n        const newVal = String(value).substr(0, String(value).length - 1);\n        this.setState({\n          value: newVal\n        });\n        break;\n      case '/':\n        this.fn = 'divide';\n        this.handleNum1(num1, value);\n        break;\n      case '*':\n        this.fn = 'multiply';\n        this.handleNum1(num1, value);\n        break;\n      case '-':\n        let t = value + val;\n        if (this.valFlag) {\n          this.setState({\n            value: val\n          });\n          t = val;\n          this.valFlag = false;\n        }\n        if (t.length === 1 || !isNaN(Number(t))) {\n          this.setState({\n            value: t\n          });\n        } else {\n          this.fn = 'minus';\n          this.handleNum1(num1, value);\n        }\n        break;\n      case '+':\n        this.fn = 'add';\n        this.handleNum1(num1, value);\n        break;\n      case '=':\n        this.handleResult(this.fn);\n        break;\n      default:\n        let secVal = value;\n        if (this.valFlag) {\n          this.setState({\n            value: ''\n          });\n          secVal = '';\n          this.valFlag = false;\n        }\n        if (isNaN(Number(secVal + val))) return;\n        this.setState({\n          value: secVal + val\n        });\n        break;\n    }\n  }\n  handleNum1(num1, value) {\n    if (!num1) {\n      this.setState({\n        num1: Number(value)\n      });\n      this.valFlag = true;\n    } else {\n      !this.valFlag && this.handleResult(this.fn);\n    }\n  }\n\n  handleResult(fn) {\n    if (!fn) return;\n    this.valFlag = true;\n    const { num1, value } = this.state;\n    if (fn === 'add') {\n      this.setState({\n        value: num1 + Number(value),\n        num1: 0\n      });\n    } else if (fn === 'minus') {\n      this.setState({\n        value: num1 - Number(value),\n        num1: 0\n      });\n    } else if (fn === 'multiply') {\n      this.setState({\n        value: num1 * Number(value),\n        num1: 0\n      });\n    } else if (fn === 'divide') {\n      this.setState({\n        value: num1 / Number(value),\n        num1: 0\n      });\n    }\n    this.fn = '';\n  }\n}\n","import React from 'react';\nimport Emitter from '../event';\n\nexport default class Block extends React.Component {\n  render() {\n    const { value, shape, active } = this.props;\n    return (\n      <div\n        className={`block ${shape}${active ? ' active' : ''}`}\n        onClick={() => this.handleValue()}\n      >\n        {value}\n      </div>\n    );\n  }\n\n  handleTouch() {\n    this.setState({\n      active: true\n    });\n  }\n  handleValue() {\n    this.handleTouch();\n    let value = this.props.value;\n    Emitter.emit('sendValue', value);\n  }\n}\n","import React from 'react';\nimport Block from '../block';\nimport './index.css';\n\nexport default class Keyboard extends React.Component {\n  render() {\n    return (\n      <div className=\"keyboard\">\n        <div className=\"left\">\n          <Block value=\"C\" shape=\"square\" fn=\"clear\" />\n          <Block value=\"DEL\" shape=\"square\" fn=\"backsapce\" />\n          <Block value=\"/\" shape=\"square\" fn=\"devide\"/>\n          <Block value=\"7\" shape=\"square\" />\n          <Block value=\"8\" shape=\"square\" />\n          <Block value=\"9\" shape=\"square\" />\n          <Block value=\"4\" shape=\"square\" />\n          <Block value=\"5\" shape=\"square\" />\n          <Block value=\"6\" shape=\"square\" />\n          <Block value=\"1\" shape=\"square\" />\n          <Block value=\"2\" shape=\"square\" />\n          <Block value=\"3\" shape=\"square\" />\n          <Block value=\"0\" shape=\"rectangle\" />\n          <Block value=\".\" shape=\"square\" />\n        </div>\n        <div className=\"right\">\n          <Block value=\"*\" shape=\"square\" fn=\"multiply\"/>\n          <Block value=\"-\" shape=\"square\" fn=\"minus\"/>\n          <Block value=\"+\" shape=\"square\" fn=\"add\"/>\n          <Block value=\"=\" shape=\"rectangle\" fn=\"equal\"/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.css';\n\nimport Screen from '../screen';\nimport Keyboard from '../keyboard'\n\nexport default class Calc extends React.Component {\n  render() {\n    return (\n      <div className=\"calc\">\n        <Screen />\n        <Keyboard />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Calc from './components/calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}