{"version":3,"sources":["components/event/index.js","components/screen/index.js","components/block/index.js","components/keyboard/index.js","components/calc/index.js","App.js","serviceWorker.js","index.js"],"names":["components_event","EventEmitter","Screen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","num1","react_default","a","createElement","className","_this2","eventEmitter","Emitter","addListener","val","handleRecieved","removeListener","_this$state","setState","newVal","String","substr","length","fn","handleNum1","handleResult","secVal","valFlag","Number","_this$state2","React","Component","Block","_this$props","shape","active","concat","onTouchStart","handleValue","handleTouch","emit","Keyboard","block_Block","Calc","screen_Screen","keyboard_Keyboard","App","calc_Calc","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b09b3e5.chunk.js","sourcesContent":["import { EventEmitter } from \"events\";\r\nexport default new EventEmitter();","import React from 'react';\r\nimport Emitter from '../event';\r\n\r\nimport './index.css';\r\n\r\nexport default class Screen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: '', num1: 0 };\r\n  }\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className=\"screen\">\r\n        <span className=\"output\">{value}</span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.eventEmitter = Emitter.addListener('sendValue', val => {\r\n      this.handleRecieved(val);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    Emitter.removeListener(this.eventEmitter);\r\n  }\r\n\r\n  handleRecieved(val) {\r\n    const { value, num1 } = this.state;\r\n    switch (val) {\r\n      case 'C':\r\n        this.setState({\r\n          value: '',\r\n          num1: 0\r\n        });\r\n        break;\r\n      case 'DEL':\r\n        const newVal = String(value).substr(0, String(value).length - 1);\r\n        this.setState({\r\n          value: newVal\r\n        });\r\n        break;\r\n      case '/':\r\n        this.fn = 'divide';\r\n        this.handleNum1(num1, value);\r\n        break;\r\n      case '*':\r\n        this.fn = 'multiply';\r\n        this.handleNum1(num1, value);\r\n        break;\r\n      case '-':\r\n        this.fn = 'minus';\r\n        this.handleNum1(num1, value);\r\n        break;\r\n      case '+':\r\n        this.fn = 'add';\r\n        this.handleNum1(num1, value);\r\n        break;\r\n      case '=':\r\n        this.handleResult(this.fn);\r\n        break;\r\n      default:\r\n        let secVal = value;\r\n        if (this.valFlag) {\r\n          this.setState({\r\n            value: ''\r\n          });\r\n          secVal = '';\r\n          this.valFlag = false;\r\n        }\r\n        this.setState({\r\n          value: secVal + val\r\n        });\r\n        break;\r\n    }\r\n  }\r\n  handleNum1(num1, value) {\r\n    if (!num1) {\r\n      this.setState({\r\n        num1: Number(value)\r\n      });\r\n      this.valFlag = true;\r\n    } else {\r\n      !this.valFlag && this.handleResult(this.fn);\r\n    }\r\n  }\r\n\r\n  handleResult(fn) {\r\n    if (!fn) return;\r\n    this.valFlag = true;\r\n    const { num1, value } = this.state;\r\n    if (fn === 'add') {\r\n      this.setState({\r\n        value: num1 + Number(value),\r\n        num1: 0\r\n      });\r\n    } else if (fn === 'minus') {\r\n      this.setState({\r\n        value: num1 - Number(value),\r\n        num1: 0\r\n      });\r\n    } else if (fn === 'multiply') {\r\n      this.setState({\r\n        value: num1 * Number(value),\r\n        num1: 0\r\n      });\r\n    } else if (fn === 'divide') {\r\n      this.setState({\r\n        value: num1 / Number(value),\r\n        num1: 0\r\n      });\r\n    }\r\n    this.fn = ''\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Emitter from '../event';\r\n\r\nexport default class Block extends React.Component {\r\n  render() {\r\n    const { value, shape, active } = this.props;\r\n    return (\r\n      <div\r\n        className={`block ${shape}${active ? ' active' : ''}`}\r\n        onTouchStart={() => this.handleValue()}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleTouch() {\r\n    this.setState({\r\n      active: true\r\n    });\r\n  }\r\n  handleValue() {\r\n    this.handleTouch();\r\n    let value = this.props.value;\r\n    Emitter.emit('sendValue', value);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Block from '../block';\r\nimport './index.css';\r\n\r\nexport default class Keyboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div className=\"left\">\r\n          <Block value=\"C\" shape=\"square\" fn=\"clear\" />\r\n          <Block value=\"DEL\" shape=\"square\" fn=\"backsapce\" />\r\n          <Block value=\"/\" shape=\"square\" fn=\"devide\"/>\r\n          <Block value=\"7\" shape=\"square\" />\r\n          <Block value=\"8\" shape=\"square\" />\r\n          <Block value=\"9\" shape=\"square\" />\r\n          <Block value=\"4\" shape=\"square\" />\r\n          <Block value=\"5\" shape=\"square\" />\r\n          <Block value=\"6\" shape=\"square\" />\r\n          <Block value=\"1\" shape=\"square\" />\r\n          <Block value=\"2\" shape=\"square\" />\r\n          <Block value=\"3\" shape=\"square\" />\r\n          <Block value=\"0\" shape=\"rectangle\" />\r\n          <Block value=\".\" shape=\"square\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <Block value=\"*\" shape=\"square\" fn=\"multiply\"/>\r\n          <Block value=\"-\" shape=\"square\" fn=\"minus\"/>\r\n          <Block value=\"+\" shape=\"square\" fn=\"add\"/>\r\n          <Block value=\"=\" shape=\"rectangle\" fn=\"equal\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nimport Screen from '../screen';\r\nimport Keyboard from '../keyboard'\r\n\r\nexport default class Calc extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"calc\">\r\n        <Screen />\r\n        <Keyboard />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Calc from './components/calc';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calc />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}